name: Unit Test & Functional Test & E2E Test

on:
  push: ~
  pull_request: ~
  workflow_dispatch: ~

jobs:
  unit-tests:
    name: Unit & Functional Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha}}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache des dépendances Node
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install node modules
        id: installNodeModules
        shell: bash
        run: |
          npm install

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache des dépendances Node
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install node modules
        id: installNodeModules
        shell: bash
        run: |
          npm install

      - name: Install dependencies
        run: npm ci

      - name: Start MongoDB Memory Server & Run E2E tests
        run: |
          # Créer un fichier .env pour les tests E2E
          echo "MONGODB_URI=mongodb://127.0.0.1:27017/test-e2e" > .env
          echo "PORT=3000" >> .env

      - name: Start MongoDB service
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: "7.0"
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Wait for MongoDB
        run: |
          timeout 30 bash -c 'until nc -z localhost 27017; do sleep 1; done'

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          start: "npm run dev"
          wait-on: "http://localhost:3000/health"
          wait-on-timeout: 120
          command: make test-e2e
        env:
          MONGODB_URI: mongodb://localhost:27017/test-e2e
          PORT: 3000

      - name: Upload Cypress videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
