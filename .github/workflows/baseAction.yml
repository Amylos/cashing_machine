name: action de base

on:
  push: ~
  workflow_dispatch:
    inputs:
      environment:
        description: "Choix du dÃ©ploiement"
        required: true
        type: choice
        options:
          - develop
          - pre-prod
          - prod
        default: develop

jobs:
  Build:
    name: Get GitHub infos
    runs-on: ubuntu-latest
    steps:
      - name: "git hub details"
        id: github_details
        shell: bash
        run: |
          echo ${GITHUB_CONTEXT}

        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha}}

      - name: Cache des dÃ©pendances Node
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install node modules
        id: installNodeModules
        shell: bash
        run: |
          npm install

      - name: Afficher les entrÃ©es utilisateur
        shell: bash
        run: |
          echo "ðŸ“¦ Environnement choisi : ${{ github.event.inputs.environment }}"

      - name: build project
        id: buildProject
        shell: bash
        run: |
          make build

      - name: add-build-to-summary
        shell: bash
        run: |
          echo "Build : tout est OK" >> $GITHUB_STEP_SUMMARY

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist

  Download:
    name: Download artifact
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5

        with:
          name: build-artifact
          path: dist

      - name: "check"
        run: |
          cd  dist && ls -l

      - name: variable-output
        id: variable-output
        run: |
          echo "::set-output name=testvar::coucou"

      - name: step-content
        run: echo ${{ steps.variable-output }}

      - name: variable-print
        run: |
          echo ${{ steps.variable-output.outputs.testvar }}
